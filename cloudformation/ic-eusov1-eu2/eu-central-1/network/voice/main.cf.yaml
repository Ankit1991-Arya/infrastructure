AWSTemplateFormatVersion: "2010-09-09"
Description: AWS CloudFormation Template for Network Only - Voice Network
#Voice1 - /22 - 10.232.112.0/22
#
#Voice2 - /22 - 10.232.116.0/22


Mappings:
  VPCaddressPrefix:
    values:
      vpcOctet: '10.232'
      voice1: '112'
      voice2: '116'
      core: '72'
      coreEnd: '0/21'
      voicetrustOctet: '10.232.112.0/24'
      voiceuntrustOctet: '10.232.113.0/25'
      voicemgmtOctet: '10.232.114.128/25'
      voice2trustOctet: '10.232.116.0/24'
      voice2untrustOctet: '10.232.117.0/25'
      voice2mgmtOctet: '10.232.118.128/25'
      ASN1: '4200002005'
      ASN2: '4200002005'
      Owner: 'Network Teams'
      AvailabilityZone1: 'eu-central-1a'
      AvailabilityZone2: 'eu-central-1b'
      VoiceToVoicePeering: 'Voice_Voice2'
      Voice1ToCorePeering: 'Voice_Core'
      Voice2ToCorePeering: 'Voice2_Core'

Parameters:
  SystemName:
    Description: System Name
    Type: String
    Default: RibbonSWE-VoiceNetwork
    MaxLength: '26'
    AllowedPattern: '^[A-Za-z]{1}[-A-Za-z0-9]*[A-Za-z0-9]{1}$'
    ConstraintDescription: 'Enter valid system name.  Regex: ^[A-Za-z]{1}[-A-Za-z0-9]*[A-Za-z0-9]{1}$ '


Resources:
  InternalServerSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Internal server security group
      VpcId: !Ref Vpc
      SecurityGroupIngress:
        - IpProtocol: '-1'
          FromPort: '0'
          ToPort: '65535'
          CidrIp: 172.28.0.0/18
        - IpProtocol: '-1'
          FromPort: '0'
          ToPort: '65535'
          CidrIp: 172.28.208.0/21
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 10.221.24.0/21
        - IpProtocol: tcp
          FromPort: '1433'
          ToPort: '1433'
          CidrIp: 10.221.24.0/21
        - IpProtocol: tcp
          FromPort: '1433'
          ToPort: '1433'
          CidrIp: 205.214.10.0/24
        - IpProtocol: tcp
          FromPort: '1971'
          ToPort: '1971'
          CidrIp: 10.221.24.0/21
        - IpProtocol: tcp
          FromPort: '8989'
          ToPort: '8989'
          CidrIp: 205.214.23.104/32
        - IpProtocol: tcp
          FromPort: '9310'
          ToPort: '9310'
          CidrIp: 10.221.24.0/21
        - IpProtocol: tcp
          FromPort: '9311'
          ToPort: '9311'
          CidrIp: 10.221.24.0/21
        - IpProtocol: tcp
          FromPort: '5060'
          ToPort: '5060'
          CidrIp: 10.221.64.0/21
        - IpProtocol: udp
          FromPort: '5060'
          ToPort: '5060'
          CidrIp: 10.221.64.0/21
        - IpProtocol: icmp
          FromPort: '-1'
          ToPort: '-1'
          CidrIp: 10.221.24.0/21
        - IpProtocol: icmp
          FromPort: '-1'
          ToPort: '-1'
          CidrIp: 205.214.15.62/32
        - IpProtocol: '-1'
          FromPort: '0'
          ToPort: '65535'
          CidrIp: 10.21.0.0/16
        - IpProtocol: '-1'
          FromPort: '0'
          ToPort: '65535'
          CidrIp: 172.17.0.0/16
        - IpProtocol: '-1'
          FromPort: '0'
          ToPort: '65535'
          CidrIp: 172.19.4.0/23
        - IpProtocol: '-1'
          FromPort: '0'
          ToPort: '65535'
          CidrIp: 172.20.0.0/16
        - IpProtocol: '-1'
          FromPort: '0'
          ToPort: '65535'
          CidrIp: 172.23.4.0/23
        - IpProtocol: '-1'
          FromPort: '0'
          ToPort: '65535'
          CidrIp: 172.27.0.0/16
        - IpProtocol: '-1'
          FromPort: '0'
          ToPort: '65535'
          CidrIp: 192.168.76.0/22
        - IpProtocol: '-1'
          FromPort: '0'
          ToPort: '65535'
          CidrIp: 205.214.14.0/24
        - IpProtocol: '-1'
          FromPort: '0'
          ToPort: '65535'
          CidrIp: 205.214.15.62/32
        - IpProtocol: '-1'
          FromPort: '0'
          ToPort: '65535'
          CidrIp: 205.214.16.0/24
        - IpProtocol: '-1'
          FromPort: '0'
          ToPort: '65535'
          CidrIp: 205.214.17.0/24
        - IpProtocol: '-1'
          FromPort: '0'
          ToPort: '65535'
          CidrIp: 205.214.18.0/24
        - IpProtocol: '-1'
          FromPort: '0'
          ToPort: '65535'
          CidrIp: 205.214.19.0/24
        - IpProtocol: '-1'
          FromPort: '0'
          ToPort: '65535'
          CidrIp: 205.214.23.124/32
      SecurityGroupEgress:
        - IpProtocol: '-1'
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: voice_internal_sg
        - Key: InfrastructureOwner
          Value: Network Teams
        - Key: ApplicationOwner
          Value: Network Teams
        - Key: Product
          Value: SecurityGroup
  InCDRServersSG:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref Vpc
      GroupDescription: sg for InCDR Servers
      Tags:
        - Key: Name
          Value: global_tools_InCDR_servers_sg
        - Key: DeviceType
          Value: Network Security Group
        - Key: InfrastructureOwner
          Value: Network Teams
        - Key: ApplicationOwner
          Value: Network Teams
        - Key: Product
          Value: SecurityGroup
      SecurityGroupIngress:
      - IpProtocol: -1   #VPN IPs
        CidrIp: 10.21.0.0/16
        Description: "GP VPN"
      - IpProtocol: -1   #On Prem FR8 DC
        CidrIp: 10.8.0.0/20
        Description: "On Prem FR8 DC"
      - IpProtocol: -1   #On Prem MU4 DC
        CidrIp: 10.8.16.0/20
        Description: "On Prem MU4 DC"
      - IpProtocol: "tcp"
        CidrIp: "10.232.73.136/32"
        FromPort: "5985"
        ToPort:  "5986"
        Description: "Rundeck Automation 5985-5986"

      SecurityGroupEgress:
      - IpProtocol: -1
        CidrIp: "172.16.0.0/12"
      - IpProtocol: -1
        CidrIp: "10.0.0.0/8"
      - IpProtocol: -1
        CidrIp: "192.168.0.0/16"
      - IpProtocol: "tcp"
        CidrIp: "0.0.0.0/0"
        FromPort: "53"
        ToPort: "53"
      - IpProtocol: "udp"
        CidrIp: "0.0.0.0/0"
        FromPort: "53"
        ToPort: "53"
      - IpProtocol: "tcp"
        CidrIp: "0.0.0.0/0"
        FromPort: "443"
        ToPort: "443"
      - IpProtocol: "tcp"
        CidrIp: "0.0.0.0/0"
        FromPort: "80"
        ToPort: "80"
  InCDRSGDomaincontrollerRule:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref InCDRServersSG
      IpProtocol: -1   #Domain Controllers All In
      Description: Domain Controllers
      SourceSecurityGroupId: !ImportValue GlobalSecurityGroups-DomainControllerSG
  InCDRServersSGJumpRule:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref InCDRServersSG
      IpProtocol: -1   #Jump Servers All In
      Description: Jump Servers
      SourceSecurityGroupId: !ImportValue GlobalSecurityGroups-JumpServersSG
  InCDRServersSGInfratoolsRule:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref InCDRServersSG
      IpProtocol: -1   #Infratools Servers All In
      Description: Infratools
      SourceSecurityGroupId: !ImportValue GlobalSecurityGroups-InfraToolsServersSG
  InCDRServersSGSSHRule:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref InCDRServersSG
      IpProtocol: 'tcp'
      FromPort: "22"
      ToPort: "22"
      Description: Globalscape SSH Port
      SourceSecurityGroupId: !Ref VPC2InCDRServersSG
  InCDRServersSGSMB139Rule:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref InCDRServersSG
      IpProtocol: 'tcp'
      FromPort: "139"
      ToPort: "139"
      Description: Globalscape SMB Port
      SourceSecurityGroupId: !Ref VPC2InCDRServersSG
  InCDRServersSGSMB445Rule:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref InCDRServersSG
      IpProtocol: 'tcp'
      FromPort: "445"
      ToPort: "445"
      Description: Globalscape SMB Port
      SourceSecurityGroupId: !Ref VPC2InCDRServersSG
  InCDRSGWSUSRule:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref InCDRServersSG
      IpProtocol: -1   #Infratools Servers All In
      Description: WSUS Patching
      SourceSecurityGroupId: !ImportValue GlobalSecurityGroups-WSUSServersSG
  # InCDRSGSophosRule:
  #   Type: 'AWS::EC2::SecurityGroupIngress'
  #   Properties:
  #     GroupId: !Ref InCDRServersSG
  #     IpProtocol: 'tcp'
  #     SourceSecurityGroupId: !Ref SophosServersSG
  #     FromPort: "8194"
  #     ToPort: "8194"
  # InCDRSGBMINTRule:
  #   Type: 'AWS::EC2::SecurityGroupIngress'
  #   Properties:
  #     GroupId: !Ref InCDRServersSG
  #     IpProtocol: 'tcp'
  #     SourceSecurityGroupId: !Ref BMINTServersSG
  #     FromPort: "3181"
  #     ToPort: "3181"
  # InCDRSGBMPCSRule:
  #   Type: 'AWS::EC2::SecurityGroupIngress'
  #   Properties:
  #     GroupId: !Ref InCDRServersSG
  #     IpProtocol: 'tcp'
  #     SourceSecurityGroupId: !Ref BMPCSServersSG
  #     FromPort: "2059"
  #     ToPort: "2059"
  # InCDRSGBMPCS2Rule:
  #   Type: 'AWS::EC2::SecurityGroupIngress'
  #   Properties:
  #     GroupId: !Ref InCDRServersSG
  #     IpProtocol: 'tcp'
  #     SourceSecurityGroupId: !Ref BMPCSServersSG
  #     FromPort: "135"
  #     ToPort: "135"
  # InCDRSGBMPCS3Rule:
  #   Type: 'AWS::EC2::SecurityGroupIngress'
  #   Properties:
  #     GroupId: !Ref InCDRServersSG
  #     IpProtocol: 'tcp'
  #     SourceSecurityGroupId: !Ref BMPCSServersSG
  #     FromPort: "445"
  #     ToPort: "445"
  # InCDRServersSGSelfRule:
  #   Type: 'AWS::EC2::SecurityGroupIngress'
  #   Properties:
  #     GroupId: !Ref InCDRServersSG
  #     IpProtocol: -1   #Self Rule
  #     SourceSecurityGroupId: !Ref InCDRServersSG




  RibbonAnalyticsSG:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref Vpc
      GroupDescription: sg for RibbonAnalytics Server
      Tags:
        - Key: Name
          Value: global_tools_RibbonAnalytics_servers_sg
        - Key: DeviceType
          Value: Network Security Group
        - Key: InfrastructureOwner
          Value: Network Teams
        - Key: ApplicationOwner
          Value: Network Teams
        - Key: Product
          Value: SecurityGroup
      SecurityGroupIngress:
      - IpProtocol: -1   #VPN IPs
        CidrIp: 10.21.0.0/16
      - IpProtocol: -1
        CidrIp: !FindInMap [ VPCaddressPrefix,values, voicemgmtOctet ]
      - IpProtocol: -1
        CidrIp: !FindInMap [ VPCaddressPrefix,values, voice2mgmtOctet ]



      SecurityGroupEgress:
      - IpProtocol: -1
        CidrIp: "172.16.0.0/12"
      - IpProtocol: -1
        CidrIp: "10.0.0.0/8"
      - IpProtocol: -1
        CidrIp: "192.168.0.0/16"
      - IpProtocol: "tcp"
        CidrIp: "0.0.0.0/0"
        FromPort: "53"
        ToPort: "53"
      - IpProtocol: "udp"
        CidrIp: "0.0.0.0/0"
        FromPort: "53"
        ToPort: "53"
      - IpProtocol: "tcp"
        CidrIp: "0.0.0.0/0"
        FromPort: "443"
        ToPort: "443"
      - IpProtocol: "tcp"
        CidrIp: "0.0.0.0/0"
        FromPort: "80"
        ToPort: "80"
  RibbonAnalyticsSGDomaincontrollerRule:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref RibbonAnalyticsSG
      IpProtocol: -1   #Domain Controllers All In
      SourceSecurityGroupId: !ImportValue GlobalSecurityGroups-DomainControllerSG
  RibbonAnalyticsSGJumpRule:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref RibbonAnalyticsSG
      IpProtocol: -1   #Jump Servers All In
      SourceSecurityGroupId: !ImportValue GlobalSecurityGroups-JumpServersSG
  RibbonAnalyticsSGChefServersRule:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref RibbonAnalyticsSG
      IpProtocol: -1   #Infratools Servers All In
      SourceSecurityGroupId: !ImportValue GlobalSecurityGroups-ChefServersSG

#SG for Ribbon Device Interface
  RibbonAnalyticsDeviceSG:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref Vpc
      GroupDescription: sg for RibbonAnalytics Server Device Interface
      Tags:
        - Key: Name
          Value: global_tools_RibbonAnalyticsDevice_servers_sg
        - Key: DeviceType
          Value: Network Security Group
        - Key: InfrastructureOwner
          Value: Network Teams
        - Key: ApplicationOwner
          Value: Network Teams
        - Key: Product
          Value: SecurityGroup
      SecurityGroupIngress:
      - IpProtocol: -1   #VPN IPs
        CidrIp: 10.21.0.0/16
        Description: "VPN IPs"
      - IpProtocol: -1
        CidrIp: !FindInMap [ VPCaddressPrefix,values, voicetrustOctet ]
      - IpProtocol: -1
        CidrIp: !FindInMap [ VPCaddressPrefix,values, voice2trustOctet ]
      - IpProtocol: -1
        CidrIp: "10.8.3.0/24"
        Description: "FR8 Trust Subnet - SBC"
      - IpProtocol: -1
        CidrIp: "10.8.4.0/23"
        Description: "FR8 Mgmt Subnet - SBC"
      - IpProtocol: -1
        CidrIp: "10.8.19.0/24"
        Description: "MU4 Trust Subnet - SBC"
      - IpProtocol: -1
        CidrIp: "10.8.20.0/23"
        Description: "MU4 Mgmt Subnet - SBC"
      - IpProtocol: -1
        CidrIp: "172.21.22.0/24"
        Description: "Prod FR4 Trust Subnet - SBC"
      - IpProtocol: -1
        CidrIp: "172.21.26.0/23"
        Description: "Prod FR4 Mgmt Subnet - SBC"
      - IpProtocol: -1
        CidrIp: "172.21.35.0/24"
        Description: "Prod MU1 Trust Subnet - SBC"
      - IpProtocol: -1
        CidrIp: "172.21.46.0/23"
        Description: "Prod MU1 Mgmt Subnet - SBC"


      SecurityGroupEgress:
      - IpProtocol: -1
        CidrIp: "172.16.0.0/12"
      - IpProtocol: -1
        CidrIp: "10.0.0.0/8"
      - IpProtocol: -1
        CidrIp: "192.168.0.0/16"
      - IpProtocol: "tcp"
        CidrIp: "0.0.0.0/0"
        FromPort: "53"
        ToPort: "53"
      - IpProtocol: "udp"
        CidrIp: "0.0.0.0/0"
        FromPort: "53"
        ToPort: "53"
      - IpProtocol: "tcp"
        CidrIp: "0.0.0.0/0"
        FromPort: "443"
        ToPort: "443"
      - IpProtocol: "tcp"
        CidrIp: "0.0.0.0/0"
        FromPort: "80"
        ToPort: "80"

  RibbonAnalyticsDeviceSGDomaincontrollerRule:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref RibbonAnalyticsDeviceSG
      IpProtocol: -1   #Domain Controllers All In
      SourceSecurityGroupId: !ImportValue GlobalSecurityGroups-DomainControllerSG
  RibbonAnalyticsDeviceSGJumpRule:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref RibbonAnalyticsDeviceSG
      IpProtocol: -1   #Jump Servers All In
      SourceSecurityGroupId: !ImportValue GlobalSecurityGroups-JumpServersSG
  RibbonAnalyticsDeviceSGChefServersRule:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref RibbonAnalyticsDeviceSG
      IpProtocol: -1   #Infratools Servers All In
      SourceSecurityGroupId: !ImportValue GlobalSecurityGroups-ChefServersSG
  RibbonAnalyticsSGSelfRule:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref RibbonAnalyticsSG
      IpProtocol: -1   #Ribbon Analytics All In
      SourceSecurityGroupId: !Ref RibbonAnalyticsSG
  RibbonAnalyticsSGSSnowdiscRule:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref RibbonAnalyticsSG
      IpProtocol: -1   #SNOW Disc Servers All In
      SourceSecurityGroupId: !ImportValue GlobalSecurityGroups-SnowdiscSG

  RibbonAnalyticsDeviceSGSelfRule:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref RibbonAnalyticsDeviceSG
      IpProtocol: -1   #Infratools Servers All In
      SourceSecurityGroupId: !Ref RibbonAnalyticsDeviceSG
  RibbonAnalyticsDeviceSGSSnowdiscRule:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref RibbonAnalyticsDeviceSG
      IpProtocol: -1   #SNOW Disc Servers All In
      SourceSecurityGroupId: !ImportValue GlobalSecurityGroups-SnowdiscSG

#SG for Ribbon PSX
  VoiceRibbonPsxSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref Vpc
      GroupDescription: Ribbon PSX security group
      Tags:
        - Key: Name
          Value:
            'Fn::Join':
              - '-'
              - - Ref: SystemName
                - psxSG
        - Key: ApplicationOwner
          Value: Voice Teams
        - Key: InfrastructureOwner
          Value: Voice Teams
        - Key: Cluster
          Value: Global
        - Key: Product
          Value: Infrastructure
        - Key: Service
          Value: AWS Voice POP
        - Key: DeviceType
          Value: Ribbon PSX
        - Key: Owner
          Value: Network Teams
        - Key: Product
          Value: Infrastructure
      SecurityGroupIngress:
        - Description: SSReq Traffic
          IpProtocol: tcp
          FromPort: '3091'
          ToPort: '3091'
          CidrIp: 0.0.0.0/0
        - Description: UDP Traffic
          IpProtocol: udp
          FromPort: '3053'
          ToPort: '3055'
          CidrIp: 0.0.0.0/0
        - Description: PES Traffic
          IpProtocol: udp
          FromPort: '9004'
          ToPort: '9004'
          CidrIp: 0.0.0.0/0
        - Description: DNS UDP
          IpProtocol: udp
          FromPort: '53'
          ToPort: '53'
          CidrIp: 0.0.0.0/0
        - Description: NTP
          IpProtocol: udp
          FromPort: '123'
          ToPort: '123'
          CidrIp: 0.0.0.0/0
        - Description: DBREPD Data
          IpProtocol: tcp
          FromPort: '3080'
          ToPort: '3080'
          CidrIp: 0.0.0.0/0
        - Description: ICMP Ping
          IpProtocol: icmp
          FromPort: '-1'
          ToPort: '-1'
          CidrIp: 0.0.0.0/0
        - Description: SIPE TCP Traffic
          IpProtocol: tcp
          FromPort: '5060'
          ToPort: '5060'
          CidrIp: 0.0.0.0/0
        - Description: JAVA
          IpProtocol: udp
          FromPort: '161'
          ToPort: '161'
          CidrIp: 0.0.0.0/0
        - Description: DBREPD Control
          IpProtocol: tcp
          FromPort: '3090'
          ToPort: '3090'
          CidrIp: 0.0.0.0/0
        - Description: SSH to CLI
          IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
        - Description: Sonus Agent
          IpProtocol: tcp
          FromPort: '19991'
          ToPort: '19991'
          CidrIp: 0.0.0.0/0
        - Description: SIPE UDP Traffic
          IpProtocol: udp
          FromPort: '5060'
          ToPort: '5060'
          CidrIp: 0.0.0.0/0
        - Description: SFTP Traffic
          IpProtocol: tcp
          FromPort: '6462'
          ToPort: '6462'
          CidrIp: 0.0.0.0/0
        - Description: Service Director
          IpProtocol: tcp
          FromPort: '5000'
          ToPort: '5000'
          CidrIp: 0.0.0.0/0
        - Description: PostgreSQL listener
          IpProtocol: tcp
          FromPort: '5432'
          ToPort: '5432'
          CidrIp: 0.0.0.0/0
        - Description: Pgbouncer
          IpProtocol: tcp
          FromPort: '6432'
          ToPort: '6432'
          CidrIp: 0.0.0.0/0
        - Description: RAMP registration
          IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 0.0.0.0/0
        - Description: DNS/ENUM TCP
          IpProtocol: tcp
          FromPort: '53'
          ToPort: '53'
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0


  VoiceRibbonPsxSGJumpRule:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref VoiceRibbonPsxSecurityGroup
      IpProtocol: -1   #Jump Servers All In
      SourceSecurityGroupId: !ImportValue GlobalSecurityGroups-JumpServersSG

  Vpc:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: !Join
        - .
        - -  !FindInMap [ VPCaddressPrefix,values,vpcOctet ]
          -  !FindInMap [ VPCaddressPrefix,values,voice1 ]
          - 0/22
      Tags:
        - Key: Name
          Value: !Ref 'AWS::StackName'
        - Key: InfrastructureOwner
          Value: Network Teams
        - Key: ApplicationOwner
          Value: Network Teams
        - Key: Product
          Value: VPC

  VGW:
    Type: 'AWS::EC2::VPNGateway'
    Properties:
      Type: ipsec.1
      AmazonSideAsn: !FindInMap [ VPCaddressPrefix,values,ASN1 ]
      Tags:
        - Key: Owner
          Value: !FindInMap [ VPCaddressPrefix,values,Owner ]
        - Key: Name
          Value: Voicenetwork-VGW
        - Key: InfrastructureOwner
          Value: Network Teams
        - Key: ApplicationOwner
          Value: Network Teams
        - Key: Product
          Value: VPN Gateway
  AttachVGWGateway:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref Vpc
      VpnGatewayId: !Ref VGW
  InternetGateway:
    Properties:
      Tags:
        - Key: Application
          Value: !Ref 'AWS::StackId'
        - Key: InfrastructureOwner
          Value: Network Teams
        - Key: ApplicationOwner
          Value: Network Teams
        - Key: Product
          Value: InternetGateway
    Type: 'AWS::EC2::InternetGateway'
  AttachGateway:
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref Vpc
    Type: 'AWS::EC2::VPCGatewayAttachment'
  Az1PublicSubnet:
    Properties:
      AvailabilityZone: !FindInMap [ VPCaddressPrefix,values,AvailabilityZone1 ]
      CidrBlock: !Join
        - .
        - - !FindInMap [ VPCaddressPrefix,values,vpcOctet ]
          - '113'
          - 0/25
      Tags:
        - Key: Name
          Value: Az1 Public Subnet
        - Key: Owner
          Value: !FindInMap [ VPCaddressPrefix,values,Owner ]
        - Key: Product
          Value: Voice
      VpcId: !Ref Vpc
    Type: 'AWS::EC2::Subnet'
  Az1PublicRouteTable:
    Properties:
      Tags:
        - Key: Name
          Value: Az1 Public Route Table
        - Key: Network
          Value: Az1 Public
      VpcId: !Ref Vpc
    Type: 'AWS::EC2::RouteTable'
  Az1PublicSubnetRouteTableAssociation:
    Properties:
      RouteTableId: !Ref Az1PublicRouteTable
      SubnetId: !Ref Az1PublicSubnet
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
  Az1PublicDefaultRoute:
    DependsOn: AttachGateway
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref Az1PublicRouteTable
    Type: 'AWS::EC2::Route'
  EIP1:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc
  NATGateway1:
    Type: 'AWS::EC2::NatGateway'
    Properties:
      AllocationId: !GetAtt
        - EIP1
        - AllocationId
      SubnetId: !Ref Az1PublicSubnet
  Az1TrustSubnet:
    Properties:
      AvailabilityZone: !FindInMap [ VPCaddressPrefix,values,AvailabilityZone1 ]
      CidrBlock: !Join
        - .
        - - !FindInMap [ VPCaddressPrefix,values,vpcOctet ]
          - '112'
          - 0/24
      Tags:
        - Key: Name
          Value: Az1 Trust Subnet
        - Key: Owner
          Value: !FindInMap [ VPCaddressPrefix,values,Owner ]
      VpcId: !Ref Vpc
    Type: 'AWS::EC2::Subnet'
  Az1TrustRouteTable:
    Properties:
      Tags:
        - Key: Name
          Value: Az1 Trust Route Table
        - Key: Network
          Value: Az1 Trust
      VpcId: !Ref Vpc
    Type: 'AWS::EC2::RouteTable'
  Az1TrustSubnetRouteTableAssociation:
    Properties:
      RouteTableId: !Ref Az1TrustRouteTable
      SubnetId: !Ref Az1TrustSubnet
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
  TrustDefaultRoute:
    DependsOn: NATGateway1
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGateway1
      RouteTableId: !Ref Az1TrustRouteTable
    Type: 'AWS::EC2::Route'
  Az1MgmtSubnet:
    Properties:
      AvailabilityZone: !FindInMap [ VPCaddressPrefix,values,AvailabilityZone1 ]
      CidrBlock: !Join
        - .
        - - !FindInMap [ VPCaddressPrefix,values,vpcOctet ]
          - '114'
          - 128/25
      Tags:
        - Key: Name
          Value: Az1 Mgmt Subnet
        - Key: Owner
          Value: !FindInMap [ VPCaddressPrefix,values,Owner ]
      VpcId: !Ref Vpc
    Type: 'AWS::EC2::Subnet'
  Az1MgmtRouteTable:
    Properties:
      Tags:
        - Key: Name
          Value: Az1 Mgmt Route Table
        - Key: Network
          Value: Az1 Mgmt
      VpcId: !Ref Vpc
    Type: 'AWS::EC2::RouteTable'
  Az1MgmtSubnetRouteTableAssociation:
    Properties:
      RouteTableId: !Ref Az1MgmtRouteTable
      SubnetId: !Ref Az1MgmtSubnet
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
  MgmtDefaultRoute:
    DependsOn: NATGateway1
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGateway1
      RouteTableId: !Ref Az1MgmtRouteTable
    Type: 'AWS::EC2::Route'
  Az1SyncSubnet:
    Properties:
      AvailabilityZone: !FindInMap [ VPCaddressPrefix,values,AvailabilityZone1 ]
      CidrBlock: !Join
        - .
        - - !FindInMap [ VPCaddressPrefix,values,vpcOctet ]
          - '114'
          - 0/25
      Tags:
        - Key: Name
          Value: Az1 Sync Subnet
        - Key: Owner
          Value: !FindInMap [ VPCaddressPrefix,values,Owner ]
      VpcId: !Ref Vpc
    Type: 'AWS::EC2::Subnet'
  Az1SyncRouteTable:
    Properties:
      Tags:
        - Key: Name
          Value: Az1 Sync Route Table
        - Key: Network
          Value: Az1 Sync
      VpcId: !Ref Vpc
    Type: 'AWS::EC2::RouteTable'
  Az1SyncSubnetRouteTableAssociation:
    Properties:
      RouteTableId: !Ref Az1SyncRouteTable
      SubnetId: !Ref Az1SyncSubnet
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
  SyncDefaultRoute:
    DependsOn: NATGateway1
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGateway1
      RouteTableId: !Ref Az1SyncRouteTable
    Type: 'AWS::EC2::Route'

  S3Endpoint:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action: '*'
            Effect: Allow
            Resource: '*'
            Principal: '*'
      RouteTableIds:
        - !Ref Az1MgmtRouteTable
        - !Ref Az1TrustRouteTable
      ServiceName: !Join
        - ''
        - - com.amazonaws.
          - !Ref 'AWS::Region'
          - .s3
      VpcId: !Ref Vpc


  RoutePropegation:
    DependsOn: AttachVGWGateway
    Type: AWS::EC2::VPNGatewayRoutePropagation
    Properties:
      RouteTableIds:
        - !Ref Az1SyncRouteTable
        - !Ref Az1HFERouteTable
        - !Ref Az1MgmtRouteTable
        - !Ref Az1PublicRouteTable
        - !Ref Az1TrustRouteTable
      VpnGatewayId: !Ref VGW

  Az1HFESubnet:
    Properties:
      AvailabilityZone: !FindInMap [ VPCaddressPrefix,values,AvailabilityZone1 ]
      CidrBlock: !Join
        - .
        - - !FindInMap [ VPCaddressPrefix,values,vpcOctet ]
          - '113'
          - 128/28
      Tags:
        - Key: Name
          Value: Az1 HFE Subnet
        - Key: Owner
          Value: !FindInMap [ VPCaddressPrefix,values,Owner ]
        - Key: Product
          Value: Voice
      VpcId: !Ref Vpc
    Type: 'AWS::EC2::Subnet'
  Az1HFERouteTable:
    Properties:
      Tags:
        - Key: Name
          Value: Az1 HFE Route Table
        - Key: Network
          Value: Az1 HFE
      VpcId: !Ref Vpc
    Type: 'AWS::EC2::RouteTable'
  Az1HFESubnetRouteTableAssociation:
    Properties:
      RouteTableId: !Ref Az1HFERouteTable
      SubnetId: !Ref Az1HFESubnet
    Type: 'AWS::EC2::SubnetRouteTableAssociation'

  Az1HFE2Subnet:
    Properties:
      AvailabilityZone: !FindInMap [ VPCaddressPrefix,values,AvailabilityZone1 ]
      CidrBlock: !Join
        - .
        - - !FindInMap [ VPCaddressPrefix,values,vpcOctet ]
          - '113'
          - 144/28
      Tags:
        - Key: Name
          Value: Az1 HFE-2 Subnet
        - Key: Owner
          Value: !FindInMap [ VPCaddressPrefix,values,Owner ]
        - Key: Product
          Value: Voice
      VpcId: !Ref Vpc
    Type: 'AWS::EC2::Subnet'
  Az1HFE2RouteTable:
    Properties:
      Tags:
        - Key: Name
          Value: Az1 HFE-2 Route Table
        - Key: Network
          Value: Az1 HFE
      VpcId: !Ref Vpc
    Type: 'AWS::EC2::RouteTable'
  Az1HFE2SubnetRouteTableAssociation:
    Properties:
      RouteTableId: !Ref Az1HFE2RouteTable
      SubnetId: !Ref Az1HFE2Subnet
    Type: 'AWS::EC2::SubnetRouteTableAssociation'

#--------------------------------------------------------
  VPC2InternalServerSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Internal server security group for Voice VPC2
      VpcId: !Ref Vpc2
      SecurityGroupIngress:
        - IpProtocol: '-1'
          FromPort: '0'
          ToPort: '65535'
          CidrIp: 172.28.0.0/18
        - IpProtocol: '-1'
          FromPort: '0'
          ToPort: '65535'
          CidrIp: 172.28.208.0/21
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 10.221.24.0/21
        - IpProtocol: tcp
          FromPort: '1433'
          ToPort: '1433'
          CidrIp: 10.221.24.0/21
        - IpProtocol: tcp
          FromPort: '1433'
          ToPort: '1433'
          CidrIp: 205.214.10.0/24
        - IpProtocol: tcp
          FromPort: '1971'
          ToPort: '1971'
          CidrIp: 10.221.24.0/21
        - IpProtocol: tcp
          FromPort: '8989'
          ToPort: '8989'
          CidrIp: 205.214.23.104/32
        - IpProtocol: tcp
          FromPort: '9310'
          ToPort: '9310'
          CidrIp: 10.221.24.0/21
        - IpProtocol: tcp
          FromPort: '9311'
          ToPort: '9311'
          CidrIp: 10.221.24.0/21
        - IpProtocol: tcp
          FromPort: '5060'
          ToPort: '5060'
          CidrIp: 10.221.64.0/21
        - IpProtocol: udp
          FromPort: '5060'
          ToPort: '5060'
          CidrIp: 10.221.64.0/21
        - IpProtocol: icmp
          FromPort: '-1'
          ToPort: '-1'
          CidrIp: 10.221.24.0/21
        - IpProtocol: icmp
          FromPort: '-1'
          ToPort: '-1'
          CidrIp: 205.214.15.62/32
        - IpProtocol: '-1'
          FromPort: '0'
          ToPort: '65535'
          CidrIp: 10.21.0.0/16
        - IpProtocol: '-1'
          FromPort: '0'
          ToPort: '65535'
          CidrIp: 172.17.0.0/16
        - IpProtocol: '-1'
          FromPort: '0'
          ToPort: '65535'
          CidrIp: 172.19.4.0/23
        - IpProtocol: '-1'
          FromPort: '0'
          ToPort: '65535'
          CidrIp: 172.20.0.0/16
        - IpProtocol: '-1'
          FromPort: '0'
          ToPort: '65535'
          CidrIp: 172.23.4.0/23
        - IpProtocol: '-1'
          FromPort: '0'
          ToPort: '65535'
          CidrIp: 172.27.0.0/16
        - IpProtocol: '-1'
          FromPort: '0'
          ToPort: '65535'
          CidrIp: 192.168.76.0/22
        - IpProtocol: '-1'
          FromPort: '0'
          ToPort: '65535'
          CidrIp: 205.214.14.0/24
        - IpProtocol: '-1'
          FromPort: '0'
          ToPort: '65535'
          CidrIp: 205.214.15.62/32
        - IpProtocol: '-1'
          FromPort: '0'
          ToPort: '65535'
          CidrIp: 205.214.16.0/24
        - IpProtocol: '-1'
          FromPort: '0'
          ToPort: '65535'
          CidrIp: 205.214.17.0/24
        - IpProtocol: '-1'
          FromPort: '0'
          ToPort: '65535'
          CidrIp: 205.214.18.0/24
        - IpProtocol: '-1'
          FromPort: '0'
          ToPort: '65535'
          CidrIp: 205.214.19.0/24
        - IpProtocol: '-1'
          FromPort: '0'
          ToPort: '65535'
          CidrIp: 205.214.23.124/32
      SecurityGroupEgress:
        - IpProtocol: '-1'
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: voice_vpc2_internal_sg
        - Key: InfrastructureOwner
          Value: Network Teams
        - Key: ApplicationOwner
          Value: Network Teams
        - Key: Product
          Value: SecurityGroup
  VPC2InCDRServersSG:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref Vpc2
      GroupDescription: sg for InCDR Servers
      Tags:
        - Key: Name
          Value: global_tools_vpc2_InCDR_servers_sg
        - Key: DeviceType
          Value: Network Security Group
        - Key: InfrastructureOwner
          Value: Network Teams
        - Key: ApplicationOwner
          Value: Network Teams
        - Key: Product
          Value: SecurityGroup
      SecurityGroupIngress:
      - IpProtocol: -1   #VPN IPs
        CidrIp: 10.21.0.0/16
        Description: "GP VPN"
      - IpProtocol: -1   #On Prem FR8 DC
        CidrIp: 10.8.0.0/20
        Description: "On Prem FR8 DC"
      - IpProtocol: -1   #On Prem MU4 DC
        CidrIp: 10.8.16.0/20
        Description: "On Prem MU4 DC"
      - IpProtocol: "tcp"
        CidrIp: "10.232.73.136/32"
        FromPort: "5985"
        ToPort:  "5986"
        Description: "Rundeck Automation 5985-5986"

      SecurityGroupEgress:
      - IpProtocol: -1
        CidrIp: "172.16.0.0/12"
      - IpProtocol: -1
        CidrIp: "10.0.0.0/8"
      - IpProtocol: -1
        CidrIp: "192.168.0.0/16"
      - IpProtocol: "tcp"
        CidrIp: "0.0.0.0/0"
        FromPort: "53"
        ToPort: "53"
      - IpProtocol: "udp"
        CidrIp: "0.0.0.0/0"
        FromPort: "53"
        ToPort: "53"
      - IpProtocol: "tcp"
        CidrIp: "0.0.0.0/0"
        FromPort: "443"
        ToPort: "443"
      - IpProtocol: "tcp"
        CidrIp: "0.0.0.0/0"
        FromPort: "80"
        ToPort: "80"
  VPC2InCDRSGDomaincontrollerRule:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref VPC2InCDRServersSG
      IpProtocol: -1   #Domain Controllers All In
      Description: Domain Controllers
      SourceSecurityGroupId: !ImportValue GlobalSecurityGroups-DomainControllerSG
  VPC2InCDRServersSGJumpRule:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref VPC2InCDRServersSG
      IpProtocol: -1   #Jump Servers All In
      Description: Jump Servers
      SourceSecurityGroupId: !ImportValue GlobalSecurityGroups-JumpServersSG
  VPC2InCDRServersSGInfratoolsRule:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref VPC2InCDRServersSG
      IpProtocol: -1   #Infratools Servers All In
      Description: Infratools
      SourceSecurityGroupId: !ImportValue GlobalSecurityGroups-InfraToolsServersSG
  VPC2InCDRSGSSHRule:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref VPC2InCDRServersSG
      IpProtocol: 'tcp'
      FromPort: "22"
      ToPort: "22"
      Description: Globalscape SSH Port
      SourceSecurityGroupId: !Ref InCDRServersSG
  VPC2InCDRSGSMB139Rule:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref VPC2InCDRServersSG
      IpProtocol: 'tcp'
      FromPort: "139"
      ToPort: "139"
      Description: Globalscape SMB Port
      SourceSecurityGroupId: !Ref InCDRServersSG
  VPC2InCDRSGSMB445Rule:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref VPC2InCDRServersSG
      IpProtocol: 'tcp'
      FromPort: "445"
      ToPort: "445"
      Description: Globalscape SMB Port
      SourceSecurityGroupId: !Ref InCDRServersSG
  VPC2InCDRSGWSUSRule:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref VPC2InCDRServersSG
      IpProtocol: -1   #Infratools Servers All In
      Description: WSUS Patching
      SourceSecurityGroupId: !ImportValue GlobalSecurityGroups-WSUSServersSG

      
  # VPC2InCDRSGSophosRule:
  #   Type: 'AWS::EC2::SecurityGroupIngress'
  #   Properties:
  #     GroupId: !Ref VPC2InCDRServersSG
  #     IpProtocol: 'tcp'
  #     SourceSecurityGroupId: !Ref SophosServersSG
  #     FromPort: "8194"
  #     ToPort: "8194"
  # VPC2InCDRSGBMINTRule:
  #   Type: 'AWS::EC2::SecurityGroupIngress'
  #   Properties:
  #     GroupId: !Ref VPC2InCDRServersSG
  #     IpProtocol: 'tcp'
  #     SourceSecurityGroupId: !Ref BMINTServersSG
  #     FromPort: "3181"
  #     ToPort: "3181"
  # VPC2InCDRSGBMPCSRule:
  #   Type: 'AWS::EC2::SecurityGroupIngress'
  #   Properties:
  #     GroupId: !Ref VPC2InCDRServersSG
  #     IpProtocol: 'tcp'
  #     SourceSecurityGroupId: !Ref BMPCSServersSG
  #     FromPort: "2059"
  #     ToPort: "2059"
  # VPC2InCDRSGBMPCS2Rule:
  #   Type: 'AWS::EC2::SecurityGroupIngress'
  #   Properties:
  #     GroupId: !Ref VPC2InCDRServersSG
  #     IpProtocol: 'tcp'
  #     SourceSecurityGroupId: !Ref BMPCSServersSG
  #     FromPort: "135"
  #     ToPort: "135"
  # VPC2InCDRSGBMPCS3Rule:
  #   Type: 'AWS::EC2::SecurityGroupIngress'
  #   Properties:
  #     GroupId: !Ref VPC2InCDRServersSG
  #     IpProtocol: 'tcp'
  #     SourceSecurityGroupId: !Ref BMPCSServersSG
  #     FromPort: "445"
  #     ToPort: "445"
  # VPC2InCDRServersSGSelfRule:
  #   Type: 'AWS::EC2::SecurityGroupIngress'
  #   Properties:
  #     GroupId: !Ref VPC2InCDRServersSG
  #     IpProtocol: -1   #Self Rule
  #     SourceSecurityGroupId: !Ref InCDRServersSG


#SG for Ribbon PSX
  Voice2RibbonPsxSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref Vpc2
      GroupDescription: Ribbon PSX security group
      Tags:
        - Key: Name
          Value:
            'Fn::Join':
              - '-'
              - - Ref: SystemName
                - psxSG
        - Key: ApplicationOwner
          Value: Voice Teams
        - Key: InfrastructureOwner
          Value: Voice Teams
        - Key: Cluster
          Value: Global
        - Key: Product
          Value: Infrastructure
        - Key: Service
          Value: AWS Voice POP
        - Key: DeviceType
          Value: Ribbon PSX
        - Key: Owner
          Value: Network Teams
        - Key: Product
          Value: Infrastructure
      SecurityGroupIngress:
        - Description: SSReq Traffic
          IpProtocol: tcp
          FromPort: '3091'
          ToPort: '3091'
          CidrIp: 0.0.0.0/0
        - Description: UDP Traffic
          IpProtocol: udp
          FromPort: '3053'
          ToPort: '3055'
          CidrIp: 0.0.0.0/0
        - Description: PES Traffic
          IpProtocol: udp
          FromPort: '9004'
          ToPort: '9004'
          CidrIp: 0.0.0.0/0
        - Description: DNS UDP
          IpProtocol: udp
          FromPort: '53'
          ToPort: '53'
          CidrIp: 0.0.0.0/0
        - Description: NTP
          IpProtocol: udp
          FromPort: '123'
          ToPort: '123'
          CidrIp: 0.0.0.0/0
        - Description: DBREPD Data
          IpProtocol: tcp
          FromPort: '3080'
          ToPort: '3080'
          CidrIp: 0.0.0.0/0
        - Description: ICMP Ping
          IpProtocol: icmp
          FromPort: '-1'
          ToPort: '-1'
          CidrIp: 0.0.0.0/0
        - Description: SIPE TCP Traffic
          IpProtocol: tcp
          FromPort: '5060'
          ToPort: '5060'
          CidrIp: 0.0.0.0/0
        - Description: JAVA
          IpProtocol: udp
          FromPort: '161'
          ToPort: '161'
          CidrIp: 0.0.0.0/0
        - Description: DBREPD Control
          IpProtocol: tcp
          FromPort: '3090'
          ToPort: '3090'
          CidrIp: 0.0.0.0/0
        - Description: SSH to CLI
          IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
        - Description: Sonus Agent
          IpProtocol: tcp
          FromPort: '19991'
          ToPort: '19991'
          CidrIp: 0.0.0.0/0
        - Description: SIPE UDP Traffic
          IpProtocol: udp
          FromPort: '5060'
          ToPort: '5060'
          CidrIp: 0.0.0.0/0
        - Description: SFTP Traffic
          IpProtocol: tcp
          FromPort: '6462'
          ToPort: '6462'
          CidrIp: 0.0.0.0/0
        - Description: Service Director
          IpProtocol: tcp
          FromPort: '5000'
          ToPort: '5000'
          CidrIp: 0.0.0.0/0
        - Description: PostgreSQL listener
          IpProtocol: tcp
          FromPort: '5432'
          ToPort: '5432'
          CidrIp: 0.0.0.0/0
        - Description: Pgbouncer
          IpProtocol: tcp
          FromPort: '6432'
          ToPort: '6432'
          CidrIp: 0.0.0.0/0
        - Description: RAMP registration
          IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 0.0.0.0/0
        - Description: DNS/ENUM TCP
          IpProtocol: tcp
          FromPort: '53'
          ToPort: '53'
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0


  Voice2RibbonPsxSGJumpRule:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref Voice2RibbonPsxSecurityGroup
      IpProtocol: -1   #Jump Servers All In
      SourceSecurityGroupId: !ImportValue GlobalSecurityGroups-JumpServersSG

  Vpc2:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: !Join
        - .
        - - !FindInMap [ VPCaddressPrefix,values,vpcOctet ]
          - !FindInMap [ VPCaddressPrefix,values,voice2 ]
          - 0/22
      Tags:
        - Key: Name
          Value: !Join
            - ''
            - - !Ref 'AWS::StackName'
              - '2'
        - Key: InfrastructureOwner
          Value: Network Teams
        - Key: ApplicationOwner
          Value: Network Teams
        - Key: Product
          Value: VPC

  VGW2:
    Type: 'AWS::EC2::VPNGateway'
    Properties:
      Type: ipsec.1
      AmazonSideAsn: !FindInMap [ VPCaddressPrefix,values,ASN2 ]
      Tags:
        - Key: Owner
          Value: !FindInMap [ VPCaddressPrefix,values,Owner ]
        - Key: Name
          Value: VoicenetworkVPCAz2-VGW
        - Key: InfrastructureOwner
          Value: Network Teams
        - Key: ApplicationOwner
          Value: Network Teams
        - Key: Product
          Value: VPNGateway
  AttachVGW2Gateway:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref Vpc2
      VpnGatewayId: !Ref VGW2
  InternetGateway2:
    Properties:
      Tags:
        - Key: Application
          Value: !Ref 'AWS::StackId'
        - Key: InfrastructureOwner
          Value: Network Teams
        - Key: ApplicationOwner
          Value: Network Teams
        - Key: Product
          Value: InternetGateway
    Type: 'AWS::EC2::InternetGateway'
  AttachGateway2:
    Properties:
      InternetGatewayId: !Ref InternetGateway2
      VpcId: !Ref Vpc2
    Type: 'AWS::EC2::VPCGatewayAttachment'
  VPC2Az2PublicSubnet:
    Properties:
      AvailabilityZone: !FindInMap [ VPCaddressPrefix,values,AvailabilityZone2 ]
      CidrBlock: !Join
        - .
        - - !FindInMap [ VPCaddressPrefix,values,vpcOctet ]
          - '117'
          - 0/25
      Tags:
        - Key: Name
          Value: Voice VPC2 Az2 Public Subnet
        - Key: Owner
          Value: !FindInMap [ VPCaddressPrefix,values,Owner ]
        - Key: Product
          Value: Voice
      VpcId: !Ref Vpc2
    Type: 'AWS::EC2::Subnet'
  VPC2Az2PublicRouteTable:
    Properties:
      Tags:
        - Key: Name
          Value: Voice VPC2 Az2 Public Route Table
        - Key: Network
          Value: Voice VPC2 Az2 Public
      VpcId: !Ref Vpc2
    Type: 'AWS::EC2::RouteTable'
  VPC2Az2PublicSubnetRouteTableAssociation:
    Properties:
      RouteTableId: !Ref VPC2Az2PublicRouteTable
      SubnetId: !Ref VPC2Az2PublicSubnet
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
  VPC2Az2PublicDefaultRoute:
    DependsOn: AttachGateway
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway2
      RouteTableId: !Ref VPC2Az2PublicRouteTable
    Type: 'AWS::EC2::Route'
  VPC2EIP1:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc2
  VPC2NATGateway1:
    Type: 'AWS::EC2::NatGateway'
    Properties:
      AllocationId: !GetAtt
        - VPC2EIP1
        - AllocationId
      SubnetId: !Ref VPC2Az2PublicSubnet
  VPC2Az2TrustSubnet:
    Properties:
      AvailabilityZone: !FindInMap [ VPCaddressPrefix,values,AvailabilityZone2 ]
      CidrBlock: !Join
        - .
        - - !FindInMap [ VPCaddressPrefix,values,vpcOctet ]
          - '116'
          - 0/24
      Tags:
        - Key: Name
          Value: Voice VPC2 Az2 Trust Subnet
        - Key: Owner
          Value: !FindInMap [ VPCaddressPrefix,values,Owner ]
      VpcId: !Ref Vpc2
    Type: 'AWS::EC2::Subnet'
  VPC2Az2TrustRouteTable:
    Properties:
      Tags:
        - Key: Name
          Value: Voice VPC2 Az2 Trust Route Table
        - Key: Network
          Value: Voice VPC2 Az2 Trust
      VpcId: !Ref Vpc2
    Type: 'AWS::EC2::RouteTable'
  VPC2Az2TrustSubnetRouteTableAssociation:
    Properties:
      RouteTableId: !Ref VPC2Az2TrustRouteTable
      SubnetId: !Ref VPC2Az2TrustSubnet
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
  VPC2TrustDefaultRoute:
    DependsOn: VPC2NATGateway1
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref VPC2NATGateway1
      RouteTableId: !Ref VPC2Az2TrustRouteTable
    Type: 'AWS::EC2::Route'
  VPC2Az2MgmtSubnet:
    Properties:
      AvailabilityZone: !FindInMap [ VPCaddressPrefix,values,AvailabilityZone2 ]
      CidrBlock: !Join
        - .
        - - !FindInMap [ VPCaddressPrefix,values,vpcOctet ]
          - '118'
          - 128/25
      Tags:
        - Key: Name
          Value: Voice VPC2 Az2 Mgmt Subnet
        - Key: Owner
          Value: !FindInMap [ VPCaddressPrefix,values,Owner ]
      VpcId: !Ref Vpc2
    Type: 'AWS::EC2::Subnet'
  VPC2Az2MgmtRouteTable:
    Properties:
      Tags:
        - Key: Name
          Value: Voice VPC2 Az2 Mgmt Route Table
        - Key: Network
          Value: Voice VPC2 Az2 Mgmt
      VpcId: !Ref Vpc2
    Type: 'AWS::EC2::RouteTable'
  VPC2Az2MgmtSubnetRouteTableAssociation:
    Properties:
      RouteTableId: !Ref VPC2Az2MgmtRouteTable
      SubnetId: !Ref VPC2Az2MgmtSubnet
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
  VPC2MgmtDefaultRoute:
    DependsOn: VPC2NATGateway1
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref VPC2NATGateway1
      RouteTableId: !Ref VPC2Az2MgmtRouteTable
    Type: 'AWS::EC2::Route'
  VPC2Az2SyncSubnet:
    Properties:
      AvailabilityZone: !FindInMap [ VPCaddressPrefix,values,AvailabilityZone2 ]
      CidrBlock: !Join
        - .
        - - !FindInMap [ VPCaddressPrefix,values,vpcOctet ]
          - '118'
          - 0/25
      Tags:
        - Key: Name
          Value: Voice VPC2 Az2 Sync Subnet
        - Key: Owner
          Value: !FindInMap [ VPCaddressPrefix,values,Owner ]
      VpcId: !Ref Vpc2
    Type: 'AWS::EC2::Subnet'
  VPC2Az2SyncRouteTable:
    Properties:
      Tags:
        - Key: Name
          Value: Voice VPC2 Az2 Sync Route Table
        - Key: Network
          Value: Voice VPC2 Az2 Sync
      VpcId: !Ref Vpc2
    Type: 'AWS::EC2::RouteTable'
  VPC2Az2SyncSubnetRouteTableAssociation:
    Properties:
      RouteTableId: !Ref VPC2Az2SyncRouteTable
      SubnetId: !Ref VPC2Az2SyncSubnet
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
  VPC2SyncDefaultRoute:
    DependsOn: VPC2NATGateway1
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref VPC2NATGateway1
      RouteTableId: !Ref VPC2Az2SyncRouteTable
    Type: 'AWS::EC2::Route'

  VPC2S3Endpoint:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action: '*'
            Effect: Allow
            Resource: '*'
            Principal: '*'
      RouteTableIds:
        - !Ref VPC2Az2MgmtRouteTable
        - !Ref VPC2Az2TrustRouteTable
      ServiceName: !Join
        - ''
        - - com.amazonaws.
          - !Ref 'AWS::Region'
          - .s3
      VpcId: !Ref Vpc2


  VPC2RoutePropegation:
    DependsOn: AttachVGWGateway
    Type: AWS::EC2::VPNGatewayRoutePropagation
    Properties:
      RouteTableIds:
        - !Ref VPC2Az2SyncRouteTable
        - !Ref VPC2Az2HFERouteTable
        - !Ref VPC2Az2MgmtRouteTable
        - !Ref VPC2Az2PublicRouteTable
        - !Ref VPC2Az2TrustRouteTable
      VpnGatewayId: !Ref VGW2

  VPC2Az2HFESubnet:
    Properties:
      AvailabilityZone: !FindInMap [ VPCaddressPrefix,values,AvailabilityZone2 ]
      CidrBlock: !Join
        - .
        - - !FindInMap [ VPCaddressPrefix,values,vpcOctet ]
          - '117'
          - 128/28
      Tags:
        - Key: Name
          Value: Voice VPC2 Az2 HFE Subnet
        - Key: Owner
          Value: !FindInMap [ VPCaddressPrefix,values,Owner ]
        - Key: Product
          Value: Voice
      VpcId: !Ref Vpc2
    Type: 'AWS::EC2::Subnet'
  VPC2Az2HFERouteTable:
    Properties:
      Tags:
        - Key: Name
          Value: Voice VPC2 Az2 HFE Route Table
        - Key: Network
          Value: Voice VPC2 Az2 HFE
      VpcId: !Ref Vpc2
    Type: 'AWS::EC2::RouteTable'
  VPC2Az2HFESubnetRouteTableAssociation:
    Properties:
      RouteTableId: !Ref VPC2Az2HFERouteTable
      SubnetId: !Ref VPC2Az2HFESubnet
    Type: 'AWS::EC2::SubnetRouteTableAssociation'

  VPC2Az2HFE2Subnet:
    Properties:
      AvailabilityZone: !FindInMap [ VPCaddressPrefix,values,AvailabilityZone2 ]
      CidrBlock: !Join
        - .
        - - !FindInMap [ VPCaddressPrefix,values,vpcOctet ]
          - '117'
          - 144/28
      Tags:
        - Key: Name
          Value: Voice VPC2 Az2 HFE-2 Subnet
        - Key: Owner
          Value: !FindInMap [ VPCaddressPrefix,values,Owner ]
        - Key: Product
          Value: Voice
      VpcId: !Ref Vpc2
    Type: 'AWS::EC2::Subnet'
  VPC2Az2HFE2RouteTable:
    Properties:
      Tags:
        - Key: Name
          Value: Voice VPC2 Az2 HFE-2 Route Table
        - Key: Network
          Value: Voice VPC2 Az2 HFE
      VpcId: !Ref Vpc2
    Type: 'AWS::EC2::RouteTable'
  VPC2Az2HFE2SubnetRouteTableAssociation:
    Properties:
      RouteTableId: !Ref VPC2Az2HFE2RouteTable
      SubnetId: !Ref VPC2Az2HFE2Subnet
    Type: 'AWS::EC2::SubnetRouteTableAssociation'



#PEERING CONNECTION
#comment - VPC Peering between voice 1 and voice 2 VPC's
  VoiceToVoicePeeringConnection:
    Type: AWS::EC2::VPCPeeringConnection
    Properties:
      VpcId: !Ref Vpc
      PeerVpcId: !Ref Vpc2
      Tags:
        - Key: Name
          Value: !FindInMap [ VPCaddressPrefix,values, VoiceToVoicePeering ]
        - Key: InfrastructureOwner
          Value: Network Teams
        - Key: ApplicationOwner
          Value: Network Teams
        - Key: Product
          Value: PeeringConnection

#VPC Peering from Voice to Core VPC
  VoiceToCorePeeringConnection:
    Type: AWS::EC2::VPCPeeringConnection
    Properties:
      VpcId: !Ref Vpc
      PeerVpcId: !ImportValue 'CoreNetwork-Vpc'
      Tags:
        - Key: Name
          Value: !FindInMap [ VPCaddressPrefix,values, Voice1ToCorePeering ]
        - Key: InfrastructureOwner
          Value: Network Teams
        - Key: ApplicationOwner
          Value: Network Teams
        - Key: Product
          Value: PeeringConnection

#VPC Peering from Voice2 to Core VPC
  Voice2ToCorePeeringConnection:
    Type: AWS::EC2::VPCPeeringConnection
    Properties:
      VpcId: !Ref Vpc2
      PeerVpcId: !ImportValue 'CoreNetwork-Vpc'
      Tags:
        - Key: Name
          Value: !FindInMap [ VPCaddressPrefix,values, Voice2ToCorePeering ]
        - Key: InfrastructureOwner
          Value: Network Teams
        - Key: ApplicationOwner
          Value: Network Teams
        - Key: Product
          Value: PeeringConnection

  #RT part
  #add routes Voice to Voice2
  VoiceVoice2TrustRouteTable:
      DependsOn: VoiceToVoicePeeringConnection
      Type: AWS::EC2::Route
      Properties:
        RouteTableId: !Ref   Az1TrustRouteTable
        DestinationCidrBlock: !Join
          - .
          - - !FindInMap [ VPCaddressPrefix,values,vpcOctet ]
            -  !FindInMap [ VPCaddressPrefix,values,voice2 ]
            - 0/22
        VpcPeeringConnectionId: !Ref VoiceToVoicePeeringConnection

     #add routes Voice to Core
  VoiceCoreTrustRouteTable:
      DependsOn: VoiceToCorePeeringConnection
      Type: AWS::EC2::Route
      Properties:
        RouteTableId: !Ref   Az1TrustRouteTable
        DestinationCidrBlock: !Join
          - .
          - - !ImportValue 'CoreNetwork-VPCaddressPrefix'
            - !FindInMap [ VPCaddressPrefix,values,core ]
            - !FindInMap [ VPCaddressPrefix,values,coreEnd ]
        VpcPeeringConnectionId: !Ref VoiceToCorePeeringConnection
  VoiceCoreMgmtRouteTable:
      DependsOn: VoiceToCorePeeringConnection
      Type: AWS::EC2::Route
      Properties:
        RouteTableId: !Ref   Az1MgmtRouteTable
        DestinationCidrBlock: !Join
          - .
          - - !ImportValue 'CoreNetwork-VPCaddressPrefix'
            - !FindInMap [ VPCaddressPrefix,values,core ]
            - !FindInMap [ VPCaddressPrefix,values,coreEnd ]
        VpcPeeringConnectionId: !Ref VoiceToCorePeeringConnection

     #add routes Voice2 to Voice
  Voice2VoiceTrustRouteTable:
      DependsOn: Voice2ToCorePeeringConnection
      Type: AWS::EC2::Route
      Properties:
        RouteTableId: !Ref   VPC2Az2TrustRouteTable
        DestinationCidrBlock: !Join
          - .
          - - !FindInMap [ VPCaddressPrefix,values,vpcOctet ]
            - !FindInMap [ VPCaddressPrefix,values,voice1 ]
            - 0/22
        VpcPeeringConnectionId: !Ref VoiceToVoicePeeringConnection

      #add routes Voice2 to Core
  Voice2CoreTrustRouteTable:
      DependsOn: Voice2ToCorePeeringConnection
      Type: AWS::EC2::Route
      Properties:
        RouteTableId: !Ref   VPC2Az2TrustRouteTable
        DestinationCidrBlock: !Join
          - .
          - - !ImportValue 'CoreNetwork-VPCaddressPrefix'
            - !FindInMap [ VPCaddressPrefix,values,core ]
            - !FindInMap [ VPCaddressPrefix,values,coreEnd ]
        VpcPeeringConnectionId: !Ref Voice2ToCorePeeringConnection
  Voice2CoreMgmtRouteTable:
    DependsOn: Voice2ToCorePeeringConnection
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref   VPC2Az2MgmtRouteTable
      DestinationCidrBlock: !Join
        - .
        - - !ImportValue 'CoreNetwork-VPCaddressPrefix'
          - !FindInMap [ VPCaddressPrefix,values,core ]
          - !FindInMap [ VPCaddressPrefix,values,coreEnd ]
      VpcPeeringConnectionId: !Ref Voice2ToCorePeeringConnection

#add routes Core to Voice via vpc peering conn
  CoreVoiceAz1LambdaRouteTable:
      DependsOn: VoiceToCorePeeringConnection
      Type: AWS::EC2::Route
      Properties:
        RouteTableId: !ImportValue 'CoreNetwork-Az1LambdaRouteTable'
        DestinationCidrBlock: !Join
          - .
          - - !FindInMap [ VPCaddressPrefix,values,vpcOctet ]
            - !FindInMap [ VPCaddressPrefix,values,voice1 ]
            - 0/22
        VpcPeeringConnectionId: !Ref VoiceToCorePeeringConnection



  CoreVoiceAz2LambdaRouteTable:
      DependsOn: VoiceToCorePeeringConnection
      Type: AWS::EC2::Route
      Properties:
        RouteTableId: !ImportValue 'CoreNetwork-Az2LambdaRouteTable'
        DestinationCidrBlock: !Join
          - .
          - - !FindInMap [ VPCaddressPrefix,values,vpcOctet ]
            - !FindInMap [ VPCaddressPrefix,values,voice1 ]
            - 0/22
        VpcPeeringConnectionId: !Ref VoiceToCorePeeringConnection


  CoreVoiceAz1CoreRouteTable:
      DependsOn: VoiceToCorePeeringConnection
      Type: AWS::EC2::Route
      Properties:
        RouteTableId: !ImportValue 'CoreNetwork-Az1CoreRouteTable'
        DestinationCidrBlock: !Join
          - .
          - - !FindInMap [ VPCaddressPrefix,values,vpcOctet ]
            - !FindInMap [ VPCaddressPrefix,values,voice1 ]
            - 0/22
        VpcPeeringConnectionId: !Ref VoiceToCorePeeringConnection


  CoreVoiceAz2CoreRouteTable:
      DependsOn: VoiceToCorePeeringConnection
      Type: AWS::EC2::Route
      Properties:
        RouteTableId: !ImportValue 'CoreNetwork-Az2CoreRouteTable'
        DestinationCidrBlock: !Join
          - .
          - - !FindInMap [ VPCaddressPrefix,values,vpcOctet ]
            - !FindInMap [ VPCaddressPrefix,values,voice1 ]
            - 0/22
        VpcPeeringConnectionId: !Ref VoiceToCorePeeringConnection



  CoreVoiceManagementRouteTable:
      DependsOn: VoiceToCorePeeringConnection
      Type: AWS::EC2::Route
      Properties:
        RouteTableId: !ImportValue 'CoreNetwork-ManagementRouteTable'
        DestinationCidrBlock: !Join
          - .
          - - !FindInMap [ VPCaddressPrefix,values,vpcOctet ]
            - !FindInMap [ VPCaddressPrefix,values,voice1 ]
            - 0/22
        VpcPeeringConnectionId: !Ref VoiceToCorePeeringConnection



  CoreVoiceAz1VIPRouteTable:
      DependsOn: VoiceToCorePeeringConnection
      Type: AWS::EC2::Route
      Properties:
        RouteTableId: !ImportValue 'CoreNetwork-Az1VIPRouteTable'
        DestinationCidrBlock: !Join
          - .
          - - !FindInMap [ VPCaddressPrefix,values,vpcOctet ]
            - !FindInMap [ VPCaddressPrefix,values,voice1 ]
            - 0/22
        VpcPeeringConnectionId: !Ref VoiceToCorePeeringConnection



  CoreVoiceAz2VIPRouteTable:
      DependsOn: VoiceToCorePeeringConnection
      Type: AWS::EC2::Route
      Properties:
        RouteTableId: !ImportValue 'CoreNetwork-Az2VIPRouteTable'
        DestinationCidrBlock: !Join
          - .
          - - !FindInMap [ VPCaddressPrefix,values,vpcOctet ]
            - !FindInMap [ VPCaddressPrefix,values,voice1 ]
            - 0/22
        VpcPeeringConnectionId: !Ref VoiceToCorePeeringConnection



  CoreVoiceAz1UntrustRouteTable:
      DependsOn: VoiceToCorePeeringConnection
      Type: AWS::EC2::Route
      Properties:
        RouteTableId: !ImportValue 'CoreNetwork-Az1UntrustRouteTable'
        DestinationCidrBlock: !Join
          - .
          - - !FindInMap [ VPCaddressPrefix,values,vpcOctet ]
            - !FindInMap [ VPCaddressPrefix,values,voice1 ]
            - 0/22
        VpcPeeringConnectionId: !Ref VoiceToCorePeeringConnection




  CoreVoiceAz2UntrustRouteTable:
      DependsOn: VoiceToCorePeeringConnection
      Type: AWS::EC2::Route
      Properties:
        RouteTableId: !ImportValue 'CoreNetwork-Az2UntrustRouteTable'
        DestinationCidrBlock: !Join
          - .
          - - !FindInMap [ VPCaddressPrefix,values,vpcOctet ]
            - !FindInMap [ VPCaddressPrefix,values,voice1 ]
            - 0/22
        VpcPeeringConnectionId: !Ref VoiceToCorePeeringConnection

#add routes Core to Voice2 via VPC Peering conn
  CoreVoice2Az1LambdaRouteTable:
      DependsOn: Voice2ToCorePeeringConnection
      Type: AWS::EC2::Route
      Properties:
        RouteTableId: !ImportValue 'CoreNetwork-Az1LambdaRouteTable'
        DestinationCidrBlock: !Join
          - .
          - - !FindInMap [ VPCaddressPrefix,values,vpcOctet ]
            - !FindInMap [ VPCaddressPrefix,values,voice2 ]
            - 0/22
        VpcPeeringConnectionId: !Ref Voice2ToCorePeeringConnection


  CoreVoice2Az2LambdaRouteTable:
      DependsOn: Voice2ToCorePeeringConnection
      Type: AWS::EC2::Route
      Properties:
        RouteTableId: !ImportValue 'CoreNetwork-Az2LambdaRouteTable'
        DestinationCidrBlock: !Join
          - .
          - - !FindInMap [ VPCaddressPrefix,values,vpcOctet ]
            - !FindInMap [ VPCaddressPrefix,values,voice2 ]
            - 0/22
        VpcPeeringConnectionId: !Ref Voice2ToCorePeeringConnection


  CoreVoice2Az1CoreRouteTable:
      DependsOn: Voice2ToCorePeeringConnection
      Type: AWS::EC2::Route
      Properties:
        RouteTableId: !ImportValue 'CoreNetwork-Az1CoreRouteTable'
        DestinationCidrBlock: !Join
          - .
          - - !FindInMap [ VPCaddressPrefix,values,vpcOctet ]
            - !FindInMap [ VPCaddressPrefix,values,voice2 ]
            - 0/22
        VpcPeeringConnectionId: !Ref Voice2ToCorePeeringConnection


  CoreVoice2Az2CoreRouteTable:
      DependsOn: Voice2ToCorePeeringConnection
      Type: AWS::EC2::Route
      Properties:
        RouteTableId: !ImportValue 'CoreNetwork-Az2CoreRouteTable'
        DestinationCidrBlock: !Join
          - .
          - - !FindInMap [ VPCaddressPrefix,values,vpcOctet ]
            - !FindInMap [ VPCaddressPrefix,values,voice2 ]
            - 0/22
        VpcPeeringConnectionId: !Ref Voice2ToCorePeeringConnection




  CoreVoice2ManagementRouteTable:
      DependsOn: Voice2ToCorePeeringConnection
      Type: AWS::EC2::Route
      Properties:
        RouteTableId: !ImportValue 'CoreNetwork-ManagementRouteTable'
        DestinationCidrBlock: !Join
          - .
          - - !FindInMap [ VPCaddressPrefix,values,vpcOctet ]
            - !FindInMap [ VPCaddressPrefix,values,voice2 ]
            - 0/22
        VpcPeeringConnectionId: !Ref Voice2ToCorePeeringConnection




  CoreVoice2Az1VIPRouteTable:
      DependsOn: Voice2ToCorePeeringConnection
      Type: AWS::EC2::Route
      Properties:
        RouteTableId: !ImportValue 'CoreNetwork-Az1VIPRouteTable'
        DestinationCidrBlock: !Join
          - .
          - - !FindInMap [ VPCaddressPrefix,values,vpcOctet ]
            - !FindInMap [ VPCaddressPrefix,values,voice2 ]
            - 0/22
        VpcPeeringConnectionId: !Ref Voice2ToCorePeeringConnection




  CoreVoice2Az2VIPRouteTable:
      DependsOn: Voice2ToCorePeeringConnection
      Type: AWS::EC2::Route
      Properties:
        RouteTableId: !ImportValue 'CoreNetwork-Az2VIPRouteTable'
        DestinationCidrBlock: !Join
          - .
          - - !FindInMap [ VPCaddressPrefix,values,vpcOctet ]
            - !FindInMap [ VPCaddressPrefix,values,voice2 ]
            - 0/22
        VpcPeeringConnectionId: !Ref Voice2ToCorePeeringConnection




  CoreVoice2Az1UntrustRouteTable:
      DependsOn: Voice2ToCorePeeringConnection
      Type: AWS::EC2::Route
      Properties:
        RouteTableId: !ImportValue 'CoreNetwork-Az1UntrustRouteTable'
        DestinationCidrBlock: !Join
          - .
          - - !FindInMap [ VPCaddressPrefix,values,vpcOctet ]
            - !FindInMap [ VPCaddressPrefix,values,voice2 ]
            - 0/22
        VpcPeeringConnectionId: !Ref Voice2ToCorePeeringConnection




  CoreVoice2Az2UntrustRouteTable:
      DependsOn: Voice2ToCorePeeringConnection
      Type: AWS::EC2::Route
      Properties:
        RouteTableId: !ImportValue 'CoreNetwork-Az2UntrustRouteTable'
        DestinationCidrBlock: !Join
          - .
          - - !FindInMap [ VPCaddressPrefix,values,vpcOctet ]
            - !FindInMap [ VPCaddressPrefix,values,voice2 ]
            - 0/22
        VpcPeeringConnectionId: !Ref Voice2ToCorePeeringConnection










Outputs:
  Vpc:
    Description: Voice VPC
    Value: !Ref Vpc
    Export:
      Name: VoiceNetwork-Vpc
  InternetGateway:
    Description: Voice InternetGateway
    Value: !Ref InternetGateway
    Export:
      Name: VoiceNetwork-InternetGateway
  Az1PublicSubnet:
    Description: Voice Az1PublicSubnet
    Value: !Ref Az1PublicSubnet
    Export:
      Name: VoiceNetwork-Az1PublicSubnet
  Az1TrustSubnet:
    Description: Voice Az1TrustSubnet
    Value: !Ref Az1TrustSubnet
    Export:
      Name: VoiceNetwork-Az1TrustSubnet
  Az1MgmtSubnet:
    Description: Voice Az1MgmtSubnet
    Value: !Ref Az1MgmtSubnet
    Export:
      Name: VoiceNetwork-Az1MgmtSubnet
  Az1SyncSubnet:
    Description: Voice Az1SyncSubnet
    Value: !Ref Az1SyncSubnet
    Export:
      Name: VoiceNetwork-Az1SyncSubnet
  S3Enpoint:
    Description: Voice S3Endpoint
    Value: !Ref S3Endpoint
    Export:
      Name: VoiceNetwork-S3Endpoint
  Az1HFESubnet:
    Description: Voice Az1HFESubnet
    Value: !Ref Az1HFESubnet
    Export:
      Name: VoiceNetwork-Az1HFESubnet
  InCDRServersSG:
    Description: Voice Network INCDR SG
    Value: !Ref InCDRServersSG
    Export:
      Name: VoiceNetwork-InCDRServersSG
  Az1HFE2Subnet:
    Description: Voice Az1HFE2Subnet
    Value: !Ref Az1HFE2Subnet
    Export:
      Name: VoiceNetwork-Az1HFE2Subnet
  InternalServerSecurityGroup:
    Description: SG for Internal Components
    Value: !Ref InternalServerSecurityGroup
    Export:
      Name: VoiceNetwork-InternalServerSecurityGroup


  RibbonAnalyticsSG:
    Description: Voice Network  RibbonAnalyticsSG
    Value: !Ref RibbonAnalyticsSG
    Export:
      Name: VoiceNetwork-RibbonAnalyticsSG


  VoiceRibbonPsxSecurityGroup:
    Description: Voice Network RibbonPsxSG
    Value: !Ref VoiceRibbonPsxSecurityGroup
    Export:
      Name: VoiceNetwork-RibbonPsxSG


#-------------------------------------------------------
  Vpc2:
    Description: Voice VPC
    Value: !Ref Vpc2
    Export:
      Name: VoiceNetwork2-Vpc
  InternetGateway2:
    Description: Voice InternetGateway VPC2
    Value: !Ref InternetGateway2
    Export:
      Name: VoiceNetwork2-InternetGateway
  VPC2Az2PublicSubnet:
    Description: Voice VPC2 Az2PublicSubnet
    Value: !Ref VPC2Az2PublicSubnet
    Export:
      Name: VoiceNetwork2-Az2PublicSubnet
  VPC2Az2TrustSubnet:
    Description: Voice VPC2 Az2TrustSubnet
    Value: !Ref VPC2Az2TrustSubnet
    Export:
      Name: VoiceNetwork2-Az2TrustSubnet
  VPC2Az2MgmtSubnet:
    Description: Voice VPC2 Az2MgmtSubnet
    Value: !Ref VPC2Az2MgmtSubnet
    Export:
      Name: VoiceNetwork2-Az2MgmtSubnet
  VPC2Az2SyncSubnet:
    Description: Voice VPC2 Az22SyncSubnet
    Value: !Ref VPC2Az2SyncSubnet
    Export:
      Name: VoiceNetwork2-Az2SyncSubnet
  VPC2S3Enpoint:
    Description: Voice VPC2 S3Endpoint
    Value: !Ref VPC2S3Endpoint
    Export:
      Name: VoiceNetwork2-S3Endpoint
  VPC2Az2HFESubnet:
    Description: Voice VPC2 Az2HFESubnet
    Value: !Ref VPC2Az2HFESubnet
    Export:
      Name: VoiceNetwork2-Az2HFESubnet
  VPC2InCDRServersSG:
    Description: Voice Network2 INCDR SG
    Value: !Ref VPC2InCDRServersSG
    Export:
      Name: VoiceNetwork2-InCDRServersSG
  VPC2Az2HFE2Subnet:
    Description: Voice VPC2 Az2HFE2Subnet
    Value: !Ref VPC2Az2HFE2Subnet
    Export:
      Name: VoiceNetwork2-Az2HFE2Subnet
  VPC2InternalServerSecurityGroup:
    Description: Voice VPC 2 SG for Internal Components
    Value: !Ref VPC2InternalServerSecurityGroup
    Export:
      Name: VoiceNetwork2-InternalServerSecurityGroup
  Az1TrustRouteTable:
    Description: Az1TrustRouteTable
    Value: !Ref Az1TrustRouteTable
    Export:
      Name: Voice-Az1TrustRouteTable
  VPC2Az2TrustRouteTable:
    Description: VPC2Az2TrustRouteTable
    Value: !Ref VPC2Az2TrustRouteTable
    Export:
      Name: Voice-VPC2Az2TrustRouteTable

  Voice2RibbonPsxSecurityGroup:
    Description: Voice Network 2 RibbonPsx SG
    Value: !Ref Voice2RibbonPsxSecurityGroup
    Export:
      Name: VoiceNetwork2-RibbonPsxSG