import os
import yaml
from collections import defaultdict

# Directory to search for spacelift.yaml files
search_directory = "terraform/aws"

# Output files
spacelift_files_output = "spacelift_files.txt"
maintainers_output = "extracted_names_and_emails.txt"
markdown_output = "spacelift_consumers.md"

# Step 1: Find all spacelift.yaml files
print("Finding all spacelift.yaml files...")
spacelift_files = []
for root, dirs, files in os.walk(search_directory):
    for file in files:
        if file == "spacelift.yaml":
            spacelift_files.append(os.path.join(root, file))

# Write the file paths to spacelift_files.txt
with open(spacelift_files_output, "w") as f:
    for file_path in spacelift_files:
        f.write(file_path + "\n")

print(f"Found {len(spacelift_files)} spacelift.yaml files. Paths written to {spacelift_files_output}.")

# Step 2: Extract maintainers' names and emails
print("Extracting maintainers' names and emails...")
maintainers = defaultdict(set)
all_emails = set()

# Process each spacelift.yaml file
for spacelift_file in spacelift_files:
    try:
        with open(spacelift_file, "r") as f:
            data = yaml.safe_load(f)
            if "maintainers" in data:
                for maintainer in data["maintainers"]:
                    name = maintainer.get("name", "Unknown")
                    email = maintainer.get("email", "Unknown")
                    maintainers[name].add(email)
                    all_emails.add(email)
    except Exception as e:
        print(f"Error processing file {spacelift_file}: {e}")

# Write unique maintainers to extracted_names_and_emails.txt
with open(maintainers_output, "w") as f:
    for name, emails in maintainers.items():
        f.write(f"{name},{','.join(emails)}\n")

print(f"Extracted maintainers written to {maintainers_output}.")

# Step 3: Generate Markdown Table
print("Generating Markdown table...")
with open(markdown_output, "w") as f:
    # Add content above the table
    f.write("### Spacelift Consumers List\n")
    f.write("This file is automatically generated by this GitHub action, using information of the maintainers in the Spacelift.yaml files of all stacks defined in this repository. The table below will be refreshed with the latest stack details once the Spacelift.yaml file is updated and merged into the main branch of this repository.\n\n")
    
    # Add the table
    f.write("| Spacelift Consumer Team Name | Email IDs                        |\n")
    f.write("| ---------------------------- | -------------------------------- |\n")
    for name, emails in maintainers.items():
        f.write(f"| {name}                       | {', '.join(emails)} |\n")
    
    # Add all emails in a single line with a copy button
    f.write("\n### All Emails\n")
    f.write("Below is the list of all unique email addresses in a single line. Use the copy button to copy them.\n\n")
    email_line = "; ".join(all_emails)
    f.write(f"```\n{email_line}\n```\n")
    f.write('<button onclick="navigator.clipboard.writeText(`' + email_line + '`);"></button>\n')

print(f"Markdown table and email list written to {markdown_output}.")